# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main", "pipetest" ]
  pull_request:
    branches: [ "main", "pipetest" ]

jobs:
  build:
    runs-on: windows-2019
    # runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET build dependencies
      uses: timheuer/bootstrap-dotnet@v1
      with:
        nuget: 'false'
        sdk: 'false'
        msbuild: 'true'

    - name: Restore dependencies
      run: dotnet restore RevitAddinTemplate.Multiversion.csproj
      working-directory: ./RevitAddinTemplate.Multiversion

    - name: Build Template Release
      run: msbuild RevitAddinTemplate.Multiversion.csproj /p:Configuration=Release
      working-directory: ./RevitAddinTemplate.Multiversion

    # - name: Read version from file
    #   id: read_version
    #   shell: pwsh
    #   run: |
    #     $version = Get-Content -Path .\RevitAddinTemplate.Multiversion\version
        # Write-Output ::set-output name=$version::read_data

    - name: Get version from file
      uses: Amadevus/pwsh-script@v2
      id: get_version
      with:
        script: |
            $version = Get-Content -Path .\RevitAddinTemplate.Multiversion\version
            Write-Output ::set-output name=version::$version
      continue-on-error: true

    - name: Echo output
      uses: Amadevus/pwsh-script@v2
      id: echo_output
      with:
        script: echo "${{ steps.get_version.outputs }}"

    - run: echo "${{ steps.get_version.outputs.error }}"
    - run: echo "${{ steps.get_version.outputs.result }}"
    - run: echo "${{ steps.get_version.outputs.version }}"
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: $ {{ steps.read_version.outputs.version }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: RevitAddinTemplate.Multiversion/bin/Release/${{ github.event.repository.name }}.zip
        asset_name: ${{ github.event.repository.name }}.zip
        asset_content_type: application/zip
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}