name: .NET

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-2019
    # runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Add nuget to PATH
      uses: nuget/setup-nuget@v1.0.5

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup .NET build dependencies
      uses: timheuer/bootstrap-dotnet@v1
      with:
        nuget: 'false'
        sdk: 'false'
        msbuild: 'true'

    - name: Restore RevitAddinTemplate.Multiversion
      run: dotnet restore RevitAddinTemplate.Multiversion.csproj
      working-directory: ./RevitAddinTemplate.Multiversion

    - name: Build RevitAddinTemplate.Multiversion Release
      run: msbuild RevitAddinTemplate.Multiversion.csproj /p:Configuration=Release
      working-directory: ./RevitAddinTemplate.Multiversion

    - name: Restore RevitTemplateVSIX
      run: dotnet restore RevitTemplateVSIX.csproj
      working-directory: ./RevitTemplateVSIX

    - name: Build RevitTemplateVSIX Release
      run: msbuild RevitTemplateVSIX.csproj /p:Configuration=Release /p:DeployExtension=false /p:ZipPackageCompressionLevel=normal
      working-directory: ./RevitTemplateVSIX

    - name: Get version from file
      uses: Amadevus/pwsh-script@v2
      id: get_version
      with:
        script: |
            $version = Get-Content -Path .\version
            Write-Output $version
            echo "$version=$version" >> "$GITHUB_OUTPUT"
      continue-on-error: true

    - run: echo "${{ steps.get_version.outputs.result }}"
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.result }}
        release_name: Release ${{ steps.get_version.outputs.result }}
        draft: false
        prerelease: false
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Artifacts file
      id: upload-zipped-template
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: RevitAddinTemplate.Multiversion/bin/Release/${{ github.event.repository.name }}.zip
        asset_name: ${{ github.event.repository.name }}.zip
        asset_content_type: application/zip
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Vsix file
      id: upload-vsix-file
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: RevitTemplateVSIX/bin/Release/RevitTemplateVSIX.vsix
        asset_name: RevitTemplateVSIX.vsix
        asset_content_type: application/octet-stream
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    # if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    needs: build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download Package artifact
        uses: actions/download-artifact@v4
        with:
          name: RevitTemplateVSIX.vsix

      - name: Upload to Open VSIX
        uses: timheuer/openvsixpublish@v1
        with:
          vsix-file: RevitTemplateVSIX.vsix

      - name: Tag and Release
        # if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[release]') }}
        id: tag_release
        uses: softprops/action-gh-release@v1
        with:
          body: Release ${{ needs.build.outputs.version }}
          tag_name: ${{ needs.build.outputs.version }}
          files: |
            **/*.vsix

      - name: Publish extension to Marketplace
        # if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[release]') }}
        uses: cezarypiatek/VsixPublisherAction@1.0
        with:
          extension-file: 'RevitTemplateVSIX.vsix'
          publish-manifest-file: 'vs-publish.json'
          personal-access-code: ${{ secrets.VS_PUBLISHER_ACCESS_TOKEN }}